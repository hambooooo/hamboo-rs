import { DateTime } from "./global.slint";
import "./fonts/num-playball.ttf";


// Missing implementation for rotating Image using software renderer
// https://github.com/slint-ui/slint/issues/3068
export component FacePointer inherits Rectangle {
    width: 240px;
    height: 280px;
    property <float> zoom : root.height / 280px;
    property <angle> seconds_angle : DateTime.seconds * 6deg;
    property <angle> minutes_angle : DateTime.minutes * 6deg + seconds_angle / 60;
    property <angle> hours_angle : (DateTime.hours >= 12 ? DateTime.hours - 12 : DateTime.hours) * 30deg + minutes_angle /  12;
    Image {
        z: 0;
        width: root.width;
        height: root.height;
        source: @image-url("images/face-pointer-bg.svg");
    }
    hour := Image {
        z: 2;
        height: 202px * zoom;
        width: 12px * zoom;
        source: @image-url("images/face-pointer-hour.svg");
//        rotation-angle: 0;
//        animate rotation-angle {
//             easing: ease-in;
//             duration: 500ms;
//        }
//        init => {
//            self.rotation-angle = hours_angle;
//        }
    }
    Image {
        z: 3;
        height: 202px * zoom;
        width: 12px * zoom;
        source: @image-url("images/face-pointer-minute.svg");
//        rotation-angle: 0;
//        animate rotation-angle {
//             easing: ease-in;
//             duration: 500ms;
//        }
//        init => {
//            self.rotation-angle = minutes_angle;
//        }
    }
    Image {
        z: 4;
        height: 202px * zoom;
        width: 12px * zoom;
        source: @image-url("images/face-pointer-second.svg");
//        rotation-angle: 0;
//        animate rotation-angle {
//            duration: 500ms;
////            iteration-count:-1;
//        }
//        init => {
//            self.rotation-angle = seconds_angle;
//        }
    }
    Rectangle {
        z: 1;
        y: root.height * 0.6;
        width: 30px * zoom;
        height: 20px * zoom;
        border-width: 2px;
        border-radius: 5px * zoom;
        border-color: #555;
        background: #222;
        Text {
            property <int> day : 1;
            horizontal-alignment: center;
            vertical-alignment: center;
            text: day;
            font-size: 14px * zoom;
            font-weight: 600;
            color: #bbb;
            animate day {
                easing: ease-in;
                duration: 1s;
            }
            init => {
                self.day = DateTime.day;
            }
        }
    }
    Text {
        z: 1;
        y: root.height * 0.15;
        text: "12";
        font-size: 30px * zoom;
        font-family: "Playball";
        color: white;
    }
    Text {
        z: 1;
        y: (root.height - self.height) / 2;
        x: (root.width - self.width) * 0.85;
        text: "3";
        font-size: 30px * zoom;
        font-family: "Playball";
        color: white;
    }
    Text {
        z: 1;
        y: (root.height - self.height) * 0.85;
        text: "6";
        font-size: 30px * zoom;
        font-family: "Playball";
        color: white;
    }
    Text {
        z: 1;
        y: (root.height - self.height) / 2;
        x: root.width * 0.15;
        text: "9";
        font-family: "Playball";
        font-size: 30px * zoom;
        color: white;
    }
}