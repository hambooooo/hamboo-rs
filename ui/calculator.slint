import { VerticalBox, HorizontalBox , GridBox} from "std-widgets.slint";
import { GoHome } from "./compontents/go-home.slint";

enum  KeyType {
    Action,
    Num,
    Opt
}

export global CalcLogic {
    out property <bool> switched : false;
    out property <string> crt-item : "0";
    out property <string> crt-opt : "+";
    out property <string> result : "0";
    out property <string> result-display : "0";
    out property <string> temp-display;
    out property <KeyType> last-keytype : KeyType.Num;

    public function calc(opt: string) {
        if (crt-opt == "+") {
            result = result.to-float() + crt-item.to-float();
        }
        if (crt-opt == "−") {
            result = result.to-float() - crt-item.to-float();
        }
        if (crt-opt == "x") {
            result = result.to-float() * crt-item.to-float();
        }
        if (crt-opt == "÷") {
            result = result.to-float() / crt-item.to-float();
        }
        crt-opt = opt;
        crt-item = 0;
    }

    public function button-pressed(key: string, type: KeyType) {
        if (key == "AC") {
            result = "0";
            result-display = "0";
            temp-display = "";
            last-keytype = KeyType.Num;
            crt-item = "0";
            crt-opt = "+";
        }
        else if (type == KeyType.Opt) {
            if (last-keytype == type) {
                crt-opt = key;
            } else {
                temp-display += crt-item.to-float();
                calc(key);
            }
            result-display = temp-display + crt-opt;
        }
        else {
            if (last-keytype != type && temp-display != "") {
                temp-display += crt-opt;
            }
            crt-item += key;
            result-display = temp-display + crt-item.to-float();
        }

        last-keytype = type;
    }
}

component ButtonNum inherits Rectangle {
    in-out property text <=> txt.text;
    border-radius: self.height * 0.2;
    border-width: 3px;
    border-color: black;
    background: touch.pressed ? #9E9FA0 : #5E5F61;
    txt := Text {
        color: touch.pressed ? #fff : #eee;
        font-size: 20px;
    }
    touch := TouchArea {
        clicked => {
            CalcLogic.button-pressed(root.text, KeyType.Num);
        }
    }
}

component ButtonArth inherits Rectangle {
    in-out property text <=> txt.text;
    property <bool> actived : CalcLogic.crt-opt == text;
    border-radius: self.height * 0.2;
    border-width: 3px;
    border-color: black;
    background: touch.pressed ? #CB7D06 : root.actived ? white : #F2A33C;
    txt := Text {
        color: touch.pressed ? #fff : root.actived ? #CB7D06 : white;
        font-size: 20px;
    }

    touch := TouchArea {
        clicked => {
            CalcLogic.button-pressed(root.text, KeyType.Opt);
        }
    }
}

component ButtonMath inherits Rectangle {
    in-out property text <=> txt.text;
    border-radius: self.height * 0.2;
    border-width: 3px;
    border-color: black;
    background: touch.pressed ? white : #bbb;
    txt := Text {
        color: black;
        font-size: 20px;
    }
    touch := TouchArea {
        clicked => {
            CalcLogic.button-pressed(root.text, KeyType.Action);
        }
    }
}

export component Calculator inherits Rectangle {
    width: 240px;
    height: 280px;
    background: black;
    GoHome { }

    GridLayout {
        spacing: 0px;
        padding: 0px;
        Row {
            Text {
                horizontal-alignment: right;
                vertical-alignment: bottom;
                colspan: 4;
                height: 40px;
                font-family: "SFUI Display";
                font-size: 20px;
                text: CalcLogic.result-display;
                color: #aaa;
            }
        }
        Row {
            Text {
                horizontal-alignment: right;
                vertical-alignment: bottom;
                colspan: 4;
                height: 40px;
                font-family: "SFUI Display";
                font-size: 45px;
                text: CalcLogic.result;
                color: white;
            }
        }

        Row {
            ButtonMath { text: "AC"; }
            ButtonMath { text: "+/-"; }
            ButtonMath { text: "%"; }
            ButtonArth { text: "÷"; }
        }
        Row {
            ButtonNum { text: "7"; }
            ButtonNum { text: "8"; }
            ButtonNum { text: "9"; }
            ButtonArth { text: "x"; }
        }
        Row {
            ButtonNum { text: "4"; }
            ButtonNum { text: "5"; }
            ButtonNum { text: "6"; }
            ButtonArth { text: "−"; }
        }
        Row {
            ButtonNum { text: "1"; }
            ButtonNum { text: "2"; }
            ButtonNum { text: "3"; }
            ButtonArth { text: "+"; }
        }
        Row {
            ButtonNum { text: "0"; colspan: 2; }
            ButtonNum { text: "."; col: 2; }
            ButtonArth { text: "="; }
        }
    }
}
